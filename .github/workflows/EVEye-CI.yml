# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
name:  EVEye Continious Integration

# Trigger on every master branch push and pull request
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:
    runs-on: ubuntu-latest

    env:
      Solution_Path: EVEye.sln
      Wpf_Project_Path: EVEye\EVEye.csproj
      Actions_Allow_Unsecure_Commands: true # Allows AddPath and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Use Nerdbank.GitVersioning to set version variables: https://github.com/AArnott/nbgv
    - name: Use Nerdbank.GitVersioning to set version variables
      uses: dotnet/nbgv@master
      id: nbgv

    # Install the .NET Core workload
    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    # Publish EVEye-Linux
    - name: Publish EVEye-Linux (x64 only)
      run:  dotnet publish -c Release -o ../EVEye-Linux -r linux-x64 --self-contained true -- -p:PublishSingleFile=true 

    # Publish EVEye-Windows
    - name: Publish EVEye-Linux (x64 only)
      run:  dotnet publish -c Release -o ../EVEye-Windows -r win-x64 --self-contained true --p:PublishSingleFile=true 

    # Publish EVEye-MacOS (x64 only)
    - name: Publish EVEye-MacOS (x64 only)
      run:  dotnet publish -c Release -o ../EVEye-MacOS -r osx-x64 --self-contained true --p:PublishSingleFile=true 


    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: EVEye
        path: |
          EVEye-Linux
          EVEye-Windows 
          EVEye-MacOS
